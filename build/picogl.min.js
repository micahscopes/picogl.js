/*!
 * The MIT License (MIT)
 *
 * Copyright (c) 2017 Tarek Sherif
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.PicoGL=e():t.PicoGL=e()}(self,(function(){return(()=>{"use strict";var t={825:(t,e,s)=>{s.d(e,{PicoGL:()=>G});const i={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,COLOR:6144,DEPTH:6145,STENCIL:6146,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,MAX_3D_TEXTURE_SIZE:32883,UNSIGNED_INT_2_10_10_10_REV:33640,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,MAX_TEXTURE_LOD_BIAS:34045,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,VERTEX_ATTRIB_ARRAY_INTEGER:35069,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,UNSIGNED_INT_10F_11F_11F_REV:35899,RGB9_E5:35901,UNSIGNED_INT_5_9_9_9_REV:35902,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,RASTERIZER_DISCARD:35977,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,UNSIGNED_INT_24_8:34042,DEPTH24_STENCIL8:35056,UNSIGNED_NORMALIZED:35863,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,MAX_SAMPLES:36183,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,VERTEX_ARRAY_BINDING:34229,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,SIGNED_NORMALIZED:36764,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,INVALID_INDEX:4294967295,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,SAMPLER_BINDING:35097,RGB10_A2UI:36975,INT_2_10_10_10_REV:36255,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,TEXTURE_IMMUTABLE_FORMAT:37167,MAX_ELEMENT_INDEX:36203,TEXTURE_IMMUTABLE_LEVELS:33503,TIMEOUT_IGNORED:-1,MAX_CLIENT_WAIT_TIMEOUT_WEBGL:37447,QUERY_COUNTER_BITS_EXT:34916,TIME_ELAPSED_EXT:35007,TIMESTAMP_EXT:36392,GPU_DISJOINT_EXT:36795,TEXTURE_MAX_ANISOTROPY_EXT:34046,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047,UNMASKED_VENDOR_WEBGL:37445,UNMASKED_RENDERER_WEBGL:37446,COMPLETION_STATUS_KHR:37297,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_SRGB_S3TC_DXT1_EXT:35916,COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:35917,COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT:35918,COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:35919,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_SRGB8_ETC2:37493,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37494,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37495,COMPRESSED_RGBA8_ETC2_EAC:37496,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGBA_ASTC_4x4_KHR:37808,COMPRESSED_RGBA_ASTC_5x4_KHR:37809,COMPRESSED_RGBA_ASTC_5x5_KHR:37810,COMPRESSED_RGBA_ASTC_6x5_KHR:37811,COMPRESSED_RGBA_ASTC_6x6_KHR:37812,COMPRESSED_RGBA_ASTC_8x5_KHR:37813,COMPRESSED_RGBA_ASTC_8x6_KHR:37814,COMPRESSED_RGBA_ASTC_8x8_KHR:37815,COMPRESSED_RGBA_ASTC_10x5_KHR:37816,COMPRESSED_RGBA_ASTC_10x6_KHR:37817,COMPRESSED_RGBA_ASTC_10x8_KHR:37818,COMPRESSED_RGBA_ASTC_10x10_KHR:37819,COMPRESSED_RGBA_ASTC_12x10_KHR:37820,COMPRESSED_RGBA_ASTC_12x12_KHR:37821,COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:37840,COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:37841,COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:37842,COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:37843,COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:37844,COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:37845,COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:37846,COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:37847,COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:37848,COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:37849,COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:37850,COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:37851,COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:37852,COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:37853},r={[i.BYTE]:1,[i.UNSIGNED_BYTE]:1,[i.SHORT]:2,[i.UNSIGNED_SHORT]:2,[i.INT]:4,[i.UNSIGNED_INT]:4,[i.FLOAT]:4},E={[i.R8]:[i.RED,i.UNSIGNED_BYTE],[i.R8_SNORM]:[i.RED,i.BYTE],[i.R16F]:[i.RED,i.FLOAT],[i.R32F]:[i.RED,i.FLOAT],[i.R8UI]:[i.RED_INTEGER,i.UNSIGNED_BYTE],[i.R8I]:[i.RED_INTEGER,i.BYTE],[i.R16UI]:[i.RED_INTEGER,i.UNSIGNED_SHORT],[i.R16I]:[i.RED_INTEGER,i.SHORT],[i.R32UI]:[i.RED_INTEGER,i.UNSIGNED_INT],[i.R32I]:[i.RED_INTEGER,i.INT],[i.RG8]:[i.RG,i.UNSIGNED_BYTE],[i.RG8_SNORM]:[i.RG,i.BYTE],[i.RG16F]:[i.RG,i.FLOAT],[i.RG32F]:[i.RG,i.FLOAT],[i.RG8UI]:[i.RG_INTEGER,i.UNSIGNED_BYTE],[i.RG8I]:[i.RG_INTEGER,i.BYTE],[i.RG16UI]:[i.RG_INTEGER,i.UNSIGNED_SHORT],[i.RG16I]:[i.RG_INTEGER,i.SHORT],[i.RG32UI]:[i.RG_INTEGER,i.UNSIGNED_INT],[i.RG32I]:[i.RG_INTEGER,i.INT],[i.RGB8]:[i.RGB,i.UNSIGNED_BYTE],[i.SRGB8]:[i.RGB,i.UNSIGNED_BYTE],[i.RGB565]:[i.RGB,i.UNSIGNED_SHORT_5_6_5],[i.RGB8_SNORM]:[i.RGB,i.BYTE],[i.R11F_G11F_B10F]:[i.RGB,i.UNSIGNED_INT_10F_11F_11F_REV],[i.RGB9_E5]:[i.RGB,i.UNSIGNED_INT_5_9_9_9_REV],[i.RGB16F]:[i.RGB,i.FLOAT],[i.RGB32F]:[i.RGB,i.FLOAT],[i.RGB8UI]:[i.RGB_INTEGER,i.UNSIGNED_BYTE],[i.RGB8I]:[i.RGB_INTEGER,i.BYTE],[i.RGB16UI]:[i.RGB_INTEGER,i.UNSIGNED_SHORT],[i.RGB16I]:[i.RGB_INTEGER,i.SHORT],[i.RGB32UI]:[i.RGB_INTEGER,i.UNSIGNED_INT],[i.RGB32I]:[i.RGB_INTEGER,i.INT],[i.RGBA8]:[i.RGBA,i.UNSIGNED_BYTE],[i.SRGB8_ALPHA8]:[i.RGBA,i.UNSIGNED_BYTE],[i.RGBA8_SNORM]:[i.RGBA,i.BYTE],[i.RGB5_A1]:[i.RGBA,i.UNSIGNED_SHORT_5_5_5_1],[i.RGBA4]:[i.RGBA,i.UNSIGNED_SHORT_4_4_4_4],[i.RGB10_A2]:[i.RGBA,i.UNSIGNED_INT_2_10_10_10_REV],[i.RGBA16F]:[i.RGBA,i.FLOAT],[i.RGBA32F]:[i.RGBA,i.FLOAT],[i.RGBA8UI]:[i.RGBA_INTEGER,i.UNSIGNED_BYTE],[i.RGBA8I]:[i.RGBA_INTEGER,i.BYTE],[i.RGB10_A2UI]:[i.RGBA_INTEGER,i.UNSIGNED_INT_2_10_10_10_REV],[i.RGBA16UI]:[i.RGBA_INTEGER,i.UNSIGNED_SHORT],[i.RGBA16I]:[i.RGBA_INTEGER,i.SHORT],[i.RGBA32I]:[i.RGBA_INTEGER,i.INT],[i.RGBA32UI]:[i.RGBA_INTEGER,i.UNSIGNED_INT],[i.DEPTH_COMPONENT16]:[i.DEPTH_COMPONENT,i.UNSIGNED_SHORT],[i.DEPTH_COMPONENT24]:[i.DEPTH_COMPONENT,i.UNSIGNED_INT],[i.DEPTH_COMPONENT32F]:[i.DEPTH_COMPONENT,i.FLOAT],[i.DEPTH24_STENCIL8]:[i.DEPTH_STENCIL,i.UNSIGNED_INT_24_8],[i.DEPTH32F_STENCIL8]:[i.DEPTH_STENCIL,i.FLOAT_32_UNSIGNED_INT_24_8_REV]},_={[i.COMPRESSED_RGB_S3TC_DXT1_EXT]:!0,[i.COMPRESSED_RGBA_S3TC_DXT1_EXT]:!0,[i.COMPRESSED_RGBA_S3TC_DXT3_EXT]:!0,[i.COMPRESSED_RGBA_S3TC_DXT5_EXT]:!0,[i.COMPRESSED_SRGB_S3TC_DXT1_EXT]:!0,[i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT]:!0,[i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT]:!0,[i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT]:!0,[i.COMPRESSED_R11_EAC]:!0,[i.COMPRESSED_SIGNED_R11_EAC]:!0,[i.COMPRESSED_RG11_EAC]:!0,[i.COMPRESSED_SIGNED_RG11_EAC]:!0,[i.COMPRESSED_RGB8_ETC2]:!0,[i.COMPRESSED_SRGB8_ETC2]:!0,[i.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2]:!0,[i.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2]:!0,[i.COMPRESSED_RGBA8_ETC2_EAC]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC]:!0,[i.COMPRESSED_RGBA_ASTC_4x4_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_5x4_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_5x5_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_6x5_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_6x6_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_8x5_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_8x6_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_8x8_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_10x5_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_10x6_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_10x8_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_10x10_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_12x10_KHR]:!0,[i.COMPRESSED_RGBA_ASTC_12x12_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR]:!0,[i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR]:!0,[i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG]:!0,[i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG]:!0,[i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG]:!0,[i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG]:!0},a={},h=new Array(1),n={},T={[i.UNSIGNED_BYTE]:{[i.RED]:i.R8,[i.RG]:i.RG8,[i.RGB]:i.RGB8,[i.RGBA]:i.RGBA8},[i.UNSIGNED_SHORT]:{[i.DEPTH_COMPONENT]:i.DEPTH_COMPONENT16},[i.FLOAT]:{[i.RED]:i.R16F,[i.RG]:i.RG16F,[i.RGB]:i.RGB16F,[i.RGBA]:i.RGBA16F,[i.DEPTH_COMPONENT]:i.DEPTH_COMPONENT32F}};class A{constructor(t,e,s){if(this.gl=t,this.texture=null,this.appState=e,this.compressed=_[s.internalFormat],void 0!==s.format&&(console.warn("Cubemap option 'format' is deprecated and will be removed. Use 'internalFormat' with a sized format instead."),this.compressed=Boolean(_[s.format]),void 0===s.type&&(s.type=s.format===i.DEPTH_COMPONENT?i.UNSIGNED_SHORT:i.UNSIGNED_BYTE),void 0===s.internalFormat&&(this.compressed?s.internalFormat=s.format:s.internalFormat=T[s.type][s.format])),this.compressed)this.internalFormat=s.internalFormat,this.format=s.internalFormat,this.type=i.UNSIGNED_BYTE;else{this.internalFormat=void 0!==s.internalFormat?s.internalFormat:i.RGBA8;let t=E[this.internalFormat];this.format=t[0],this.type=void 0!==s.type?s.type:t[1]}this.currentUnit=-1;let r=Array.isArray(s.negX),h=r?s.negX[0]:s.negX,{width:n=h.width,height:A=h.height,flipY:R=!1,premultiplyAlpha:S=!1,minFilter:l=(h?i.LINEAR_MIPMAP_NEAREST:i.NEAREST),magFilter:o=(h?i.LINEAR:i.NEAREST),wrapS:N=i.REPEAT,wrapT:u=i.REPEAT,compareMode:I=i.NONE,compareFunc:c=i.LEQUAL,minLOD:B=null,maxLOD:m=null,baseLevel:M=null,maxLevel:C=null,maxAnisotropy:O=1}=s;this.width=n,this.height=A,this.flipY=R,this.premultiplyAlpha=S,this.minFilter=l,this.magFilter=o,this.wrapS=N,this.wrapT=u,this.compareMode=I,this.compareFunc=c,this.minLOD=B,this.maxLOD=m,this.baseLevel=M,this.maxLevel=C,this.maxAnisotropy=Math.min(O,a.MAX_TEXTURE_ANISOTROPY),this.mipmaps=l===i.LINEAR_MIPMAP_NEAREST||l===i.LINEAR_MIPMAP_LINEAR,this.miplevelsProvided=r&&s.negX.length>1,this.levels=this.mipmaps?Math.floor(Math.log2(Math.min(this.width,this.height)))+1:1,this.restore(s)}restore(t=n){this.texture=this.gl.createTexture(),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.bind(0),this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MAG_FILTER,this.magFilter),this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MIN_FILTER,this.minFilter),this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_WRAP_S,this.wrapS),this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_WRAP_T,this.wrapT),this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_COMPARE_FUNC,this.compareFunc),this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_COMPARE_MODE,this.compareMode),null!==this.baseLevel&&this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_BASE_LEVEL,this.baseLevel),null!==this.maxLevel&&this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_LEVEL,this.maxLevel),null!==this.minLOD&&this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MIN_LOD,this.minLOD),null!==this.maxLOD&&this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_LOD,this.maxLOD),this.maxAnisotropy>1&&this.gl.texParameteri(i.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy),this.gl.texStorage2D(i.TEXTURE_CUBE_MAP,this.levels,this.internalFormat,this.width,this.height);let{negX:e,posX:s,negY:r,posY:E,negZ:_,posZ:a}=t;return e&&(this.faceData(i.TEXTURE_CUBE_MAP_NEGATIVE_X,e),this.faceData(i.TEXTURE_CUBE_MAP_POSITIVE_X,s),this.faceData(i.TEXTURE_CUBE_MAP_NEGATIVE_Y,r),this.faceData(i.TEXTURE_CUBE_MAP_POSITIVE_Y,E),this.faceData(i.TEXTURE_CUBE_MAP_NEGATIVE_Z,_),this.faceData(i.TEXTURE_CUBE_MAP_POSITIVE_Z,a)),this.mipmaps&&!this.miplevelsProvided&&this.gl.generateMipmap(i.TEXTURE_CUBE_MAP),this}delete(){return this.texture&&(this.gl.deleteTexture(this.texture),this.texture=null,this.appState.textures[this.currentUnit]=null,this.currentUnit=-1),this}faceData(t,e){Array.isArray(e)||(h[0]=e,e=h);let s,r=this.mipmaps?e.length:1,E=this.width,_=this.height;if(this.gl.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,this.flipY),this.gl.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),this.compressed)for(s=0;s<r;++s)this.gl.compressedTexSubImage2D(t,s,0,0,E,_,this.format,e[s]),E=Math.max(E>>1,1),_=Math.max(_>>1,1);else for(s=0;s<r;++s)this.gl.texSubImage2D(t,s,0,0,E,_,this.format,this.type,e[s]),E=Math.max(E>>1,1),_=Math.max(_>>1,1);return this}bind(t){let e=this.appState.textures[t];return this.appState.activeTexture!==t&&(this.gl.activeTexture(i.TEXTURE0+t),this.appState.activeTexture=t),e!==this&&(e&&(e.currentUnit=-1),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.gl.bindTexture(i.TEXTURE_CUBE_MAP,this.texture),this.appState.textures[t]=this,this.currentUnit=t),this}}class R{constructor(t,e,s,r=null,E){this.gl=t,this.currentProgram=s,this.drawPrimitive=i.TRIANGLES,this.currentVertexArray=r,this.currentTransformFeedback=null,this.appState=e,this.uniformIndices={},this.uniformNames=new Array(a.MAX_UNIFORMS),this.uniformValues=new Array(a.MAX_UNIFORMS),this.uniformCount=0,this.uniformBuffers=new Array(a.MAX_UNIFORM_BUFFERS),this.uniformBlockNames=new Array(a.MAX_UNIFORM_BUFFERS),this.uniformBlockCount=0,this.textures=new Array(a.MAX_TEXTURE_UNITS),this.textureCount=0,this.offsets=new Int32Array(1),this.numElements=new Int32Array(1),this.numInstances=new Int32Array(1),this.baseVertices=new Int32Array(1),this.baseInstances=new Uint32Array(1),this.hasBaseInstancesOrBaseVertices=!1,this.missingExtensionWarningDispatched=!1,this.numDraws=1,this.drawCountsFromVertexArray=!0,void 0!==E&&(console.warn("Primitive argument to 'App.createDrawCall' is deprecated and will be removed. Use 'DrawCall.primitive' instead."),this.primitive(E))}primitive(t){return this.drawPrimitive=t,this}transformFeedback(t){return this.currentTransformFeedback=t,this}uniform(t,e){let s=this.uniformIndices[t];return void 0===s&&(s=this.uniformCount++,this.uniformIndices[t]=s,this.uniformNames[s]=t),this.uniformValues[s]=e,this}texture(t,e){let s=this.currentProgram.samplers[t];return this.textures[s]=e,this}uniformBlock(t,e){let s=this.currentProgram.uniformBlocks[t];return this.uniformBuffers[s]=e,this}drawRanges(...t){this.numDraws=t.length,this.offsets.length<this.numDraws&&(this.offsets=new Int32Array(this.numDraws)),this.numElements.length<this.numDraws&&(this.numElements=new Int32Array(this.numDraws)),this.numInstances.length<this.numDraws&&(this.numInstances=new Int32Array(this.numDraws)),this.baseInstances.length<this.numDraws&&(this.baseInstances=new Uint32Array(this.numDraws)),this.baseVertices.length<this.numDraws&&(this.baseVertices=new Int32Array(this.numDraws));for(let e=0;e<this.numDraws;++e){let s=t[e];this.offsets[e]=s[0],this.numElements[e]=s[1],this.numInstances[e]=s[2]||1,this.baseInstances[e]=s[3]||0,this.baseVertices[e]=s[4]||0,this.hasBaseVertices=this.hasBaseVertices||this.baseVertices[e],this.hasBaseInstances=this.hasBaseInstances||this.baseInstances[e],this.hasBaseInstancesOrBaseVertices=this.hasBaseInstances||this.hasBaseVertices}return this.drawCountsFromVertexArray=!1,this}draw(){let t=this.uniformNames,e=this.uniformValues,s=this.uniformBuffers,r=this.currentProgram.uniformBlockCount,E=this.textures,_=this.currentProgram.samplerCount,h=!1;this.currentProgram.bind(),this.currentVertexArray&&(this.currentVertexArray.bind(),h=this.currentVertexArray.indexed,this.drawCountsFromVertexArray&&(this.numElements[0]=this.currentVertexArray.numElements,this.numInstances[0]=this.currentVertexArray.numInstances));for(let s=0;s<this.uniformCount;++s)this.currentProgram.uniform(t[s],e[s]);for(let t=0;t<r;++t)s[t].bind(t);for(let t=0;t<_;++t)E[t].bind(t);if(this.currentTransformFeedback?(this.currentTransformFeedback.bind(),this.gl.beginTransformFeedback(this.drawPrimitive)):this.appState.transformFeedback&&(this.gl.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.appState.transformFeedback=null),!this.hasBaseInstancesOrBaseVertices||a.DRAW_INSTANCED_BASE_VERTEX_BASE_INSTANCE||a.MULTI_DRAW_INSTANCED_BASE_VERTEX_BASE_INSTANCE||this.missingExtensionWarningDispatched||(console.warn("DrawCall.draw 'baseInstances' or 'baseVertices' have been set but supporting WebGL extensions are not available; Without 'WEBGL_multidraw_instanced_base_vertex_base_instance' or 'WEBGL_draw_instanced_base_vertex_base_instance' are needed for optimal performance."),this.missingExtensionWarningDispatched=!0),a.MULTI_DRAW_INSTANCED_BASE_VERTEX_BASE_INSTANCE){let t=this.appState.extensions.multiDrawInstancedBaseVertexBaseInstance;h?t.multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL(this.drawPrimitive,this.numElements,0,this.currentVertexArray.indexType,this.offsets,0,this.numInstances,0,this.baseVertices,0,this.baseInstances,0,this.numDraws):t.multiDrawArraysInstancedBaseInstanceWEBGL(this.drawPrimitive,this.offsets,0,this.numElements,0,this.numInstances,0,this.baseInstances,0,this.numDraws)}else if(this.hasBaseInstancesOrBaseVertices&&a.DRAW_INSTANCED_BASE_VERTEX_BASE_INSTANCE){let t=this.appState.extensions.drawInstancedBaseVertexBaseInstance;if(h)for(let e=0;e<this.numDraws;++e)t.drawElementsInstancedBaseVertexBaseInstanceWEBGL(this.drawPrimitive,this.numElements[e],this.currentVertexArray.indexType,this.offsets[e],this.numInstances[e],this.baseVertices[e],this.baseInstances[e]);else for(let e=0;e<this.numDraws;++e)t.drawArraysInstancedBaseInstanceWEBGL(this.drawPrimitive,this.offsets[e],this.numElements[e],this.numInstances[e],this.baseInstances[e])}else if(a.MULTI_DRAW_INSTANCED&&!this.hasBaseInstancesOrBaseVertices){let t=this.appState.extensions.multiDrawInstanced;h?t.multiDrawElementsInstancedWEBGL(this.drawPrimitive,this.numElements,0,this.currentVertexArray.indexType,this.offsets,0,this.numInstances,0,this.numDraws):t.multiDrawArraysInstancedWEBGL(this.drawPrimitive,this.offsets,0,this.numElements,0,this.numInstances,0,this.numDraws)}else if(h)for(let t=0;t<this.numDraws;++t)this.hasBaseInstances&&this.currentVertexArray&&this.currentVertexArray.baseOffsetInstanceAttributeBuffers(this.baseInstances[t]),this.gl.drawElementsInstanced(this.drawPrimitive,this.numElements[t],this.currentVertexArray.indexType,this.offsets[t],this.numInstances[t]);else for(let t=0;t<this.numDraws;++t)this.hasBaseInstances&&this.currentVertexArray&&this.currentVertexArray.baseOffsetInstanceAttributeBuffers(this.baseInstances[t]),this.gl.drawArraysInstanced(this.drawPrimitive,this.offsets[t],this.numElements[t],this.numInstances[t]);return this.currentTransformFeedback&&this.gl.endTransformFeedback(),this}}class S{constructor(t,e,s,r,h=r.width,A=r.height,R,S,l=n){if(this.gl=t,this.binding=s,this.texture=null,this.width=h||0,this.height=A||0,this.depth=R||0,this.is3D=S,this.appState=e,this.compressed=Boolean(_[l.internalFormat]),void 0!==l.format&&(console.warn("Texture option 'format' is deprecated and will be removed. Use 'internalFormat' with a sized format instead."),this.compressed=Boolean(_[l.format]),void 0===l.type&&(l.type=l.format===i.DEPTH_COMPONENT?i.UNSIGNED_SHORT:i.UNSIGNED_BYTE),void 0===l.internalFormat&&(this.compressed?l.internalFormat=l.format:l.internalFormat=T[l.type][l.format])),this.compressed)this.internalFormat=l.internalFormat,this.format=this.internalFormat,this.type=i.UNSIGNED_BYTE;else{this.internalFormat=void 0!==l.internalFormat?l.internalFormat:i.RGBA8;let t=E[this.internalFormat];this.format=t[0],this.type=void 0!==l.type?l.type:t[1]}this.currentUnit=-1;let{minFilter:o=(r?i.LINEAR_MIPMAP_NEAREST:i.NEAREST),magFilter:N=(r?i.LINEAR:i.NEAREST),wrapS:u=i.REPEAT,wrapT:I=i.REPEAT,wrapR:c=i.REPEAT,compareMode:B=i.NONE,compareFunc:m=i.LEQUAL,minLOD:M=null,maxLOD:C=null,baseLevel:O=null,maxLevel:F=null,maxAnisotropy:D=1,flipY:f=!1,premultiplyAlpha:L=!1}=l;this.minFilter=o,this.magFilter=N,this.wrapS=u,this.wrapT=I,this.wrapR=c,this.compareMode=B,this.compareFunc=m,this.minLOD=M,this.maxLOD=C,this.baseLevel=O,this.maxLevel=F,this.maxAnisotropy=Math.min(D,a.MAX_TEXTURE_ANISOTROPY),this.flipY=f,this.premultiplyAlpha=L,this.mipmaps=o===i.LINEAR_MIPMAP_NEAREST||o===i.LINEAR_MIPMAP_LINEAR,this.restore(r)}restore(t){return this.texture=null,this.resize(this.width,this.height,this.depth),t&&this.data(t),this}resize(t,e,s){if(s=s||0,this.texture&&t===this.width&&e===this.height&&s===this.depth)return this;let r;return this.gl.deleteTexture(this.texture),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.texture=this.gl.createTexture(),this.bind(Math.max(this.currentUnit,0)),this.width=t,this.height=e,this.depth=s,this.gl.texParameteri(this.binding,i.TEXTURE_MIN_FILTER,this.minFilter),this.gl.texParameteri(this.binding,i.TEXTURE_MAG_FILTER,this.magFilter),this.gl.texParameteri(this.binding,i.TEXTURE_WRAP_S,this.wrapS),this.gl.texParameteri(this.binding,i.TEXTURE_WRAP_T,this.wrapT),this.gl.texParameteri(this.binding,i.TEXTURE_WRAP_R,this.wrapR),this.gl.texParameteri(this.binding,i.TEXTURE_COMPARE_FUNC,this.compareFunc),this.gl.texParameteri(this.binding,i.TEXTURE_COMPARE_MODE,this.compareMode),null!==this.minLOD&&this.gl.texParameterf(this.binding,i.TEXTURE_MIN_LOD,this.minLOD),null!==this.maxLOD&&this.gl.texParameterf(this.binding,i.TEXTURE_MAX_LOD,this.maxLOD),null!==this.baseLevel&&this.gl.texParameteri(this.binding,i.TEXTURE_BASE_LEVEL,this.baseLevel),null!==this.maxLevel&&this.gl.texParameteri(this.binding,i.TEXTURE_MAX_LEVEL,this.maxLevel),this.maxAnisotropy>1&&this.gl.texParameteri(this.binding,i.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy),this.is3D?(r=this.mipmaps?Math.floor(Math.log2(Math.max(Math.max(this.width,this.height),this.depth)))+1:1,this.gl.texStorage3D(this.binding,r,this.internalFormat,this.width,this.height,this.depth)):(r=this.mipmaps?Math.floor(Math.log2(Math.max(this.width,this.height)))+1:1,this.gl.texStorage2D(this.binding,r,this.internalFormat,this.width,this.height)),this}data(t){Array.isArray(t)||(h[0]=t,t=h);let e,s=this.mipmaps?t.length:1,r=this.width,E=this.height,_=this.depth,a=this.mipmaps&&1===t.length;if(this.bind(Math.max(this.currentUnit,0)),this.gl.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,this.flipY),this.gl.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),this.compressed)if(this.is3D)for(e=0;e<s;++e)this.gl.compressedTexSubImage3D(this.binding,e,0,0,0,r,E,_,this.format,t[e]),r=Math.max(r>>1,1),E=Math.max(E>>1,1),_=Math.max(_>>1,1);else for(e=0;e<s;++e)this.gl.compressedTexSubImage2D(this.binding,e,0,0,r,E,this.format,t[e]),r=Math.max(r>>1,1),E=Math.max(E>>1,1);else if(this.is3D)for(e=0;e<s;++e)this.gl.texSubImage3D(this.binding,e,0,0,0,r,E,_,this.format,this.type,t[e]),r=Math.max(r>>1,1),E=Math.max(E>>1,1),_=Math.max(_>>1,1);else for(e=0;e<s;++e)this.gl.texSubImage2D(this.binding,e,0,0,r,E,this.format,this.type,t[e]),r=Math.max(r>>1,1),E=Math.max(E>>1,1);return a&&this.gl.generateMipmap(this.binding),this}delete(){return this.texture&&(this.gl.deleteTexture(this.texture),this.texture=null,-1!==this.currentUnit&&this.appState.textures[this.currentUnit]===this&&(this.appState.textures[this.currentUnit]=null,this.currentUnit=-1)),this}bind(t){let e=this.appState.textures[t];return this.appState.activeTexture!==t&&(this.gl.activeTexture(i.TEXTURE0+t),this.appState.activeTexture=t),e!==this&&(e&&(e.currentUnit=-1),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.gl.bindTexture(this.binding,this.texture),this.appState.textures[t]=this,this.currentUnit=t),this}}class l{constructor(t,e,s,i,r=0){this.gl=t,this.renderbuffer=null,this.width=e,this.height=s,this.internalFormat=i,this.samples=r,this.restore()}restore(){return this.renderbuffer=this.gl.createRenderbuffer(),this.resize(this.width,this.height),this}resize(t,e){return this.width=t,this.height=e,this.gl.bindRenderbuffer(i.RENDERBUFFER,this.renderbuffer),this.gl.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,this.internalFormat,this.width,this.height),this.gl.bindRenderbuffer(i.RENDERBUFFER,null),this}delete(){return this.gl.deleteRenderbuffer(this.renderbuffer),this.renderbuffer=null,this}}class o{constructor(t,e){this.gl=t,this.framebuffer=null,this.appState=e,this.numColorTargets=0,this.colorAttachments=[],this.colorAttachmentEnums=[],this.colorAttachmentTargets=[],this.depthAttachment=null,this.depthAttachmentTarget=null,this.width=0,this.height=0,this.restore()}restore(){let t=this.appState.framebuffers;for(let e in t)t[e]===this&&(t[e]=null);return this.framebuffer=this.gl.createFramebuffer(),this}colorTarget(t,e,s=(e.is3D?0:i.TEXTURE_2D)){if(t>=this.numColorTargets){let e=t+1;this.colorAttachmentEnums.length=e,this.colorAttachments.length=e,this.colorAttachmentTargets.length=e;for(let t=this.numColorTargets;t<e-1;++t)this.colorAttachmentEnums[t]=i.NONE,this.colorAttachments[t]=null,this.colorAttachmentTargets[t]=0;this.numColorTargets=e}this.colorAttachmentEnums[t]=i.COLOR_ATTACHMENT0+t,this.colorAttachments[t]=e,this.colorAttachmentTargets[t]=s;let r=this.bindAndCaptureState(),E=this.appState.drawFramebufferBinding;return e instanceof l?this.gl.framebufferRenderbuffer(E,this.colorAttachmentEnums[t],i.RENDERBUFFER,e.renderbuffer):e.is3D?this.gl.framebufferTextureLayer(E,this.colorAttachmentEnums[t],e.texture,0,s):this.gl.framebufferTexture2D(E,this.colorAttachmentEnums[t],s,e.texture,0),this.gl.drawBuffers(this.colorAttachmentEnums),this.width=e.width,this.height=e.height,this.restoreState(r),this}depthTarget(t,e=(t.is3D?0:i.TEXTURE_2D)){let s=this.bindAndCaptureState(),r=this.appState.drawFramebufferBinding;return this.depthAttachment=t,this.depthAttachmentTarget=e,t instanceof l?this.gl.framebufferRenderbuffer(r,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,t.renderbuffer):t.is3D?this.gl.framebufferTextureLayer(r,i.DEPTH_ATTACHMENT,t.texture,0,e):this.gl.framebufferTexture2D(r,i.DEPTH_ATTACHMENT,e,t.texture,0),this.width=t.width,this.height=t.height,this.restoreState(s),this}resize(t=this.gl.drawingBufferWidth,e=this.gl.drawingBufferHeight){let s=this.bindAndCaptureState(),r=this.appState.drawFramebufferBinding;for(let s=0;s<this.numColorTargets;++s){let i=this.colorAttachments[s];i&&(i.resize(t,e),i instanceof S&&(i.is3D?this.gl.framebufferTextureLayer(r,this.colorAttachmentEnums[s],i.texture,0,this.colorAttachmentTargets[s]):this.gl.framebufferTexture2D(r,this.colorAttachmentEnums[s],this.colorAttachmentTargets[s],i.texture,0)))}return this.depthAttachment&&(this.depthAttachment.resize(t,e),this.depthAttachment instanceof S&&(this.depthAttachment.is3D?this.gl.framebufferTextureLayer(r,i.DEPTH_ATTACHMENT,this.depthAttachment.texture,0,this.depthAttachmentTarget):this.gl.framebufferTexture2D(r,i.DEPTH_ATTACHMENT,this.depthAttachmentTarget,this.depthAttachment.texture,0))),this.width=t,this.height=e,this.restoreState(s),this}delete(){if(this.framebuffer){this.gl.deleteFramebuffer(this.framebuffer),this.framebuffer=null;let t=this.appState.framebuffers;for(let e in t)t[e]===this&&(this.gl.bindFramebuffer(e,null),t[e]=null)}return this}getStatus(){let t=this.bindAndCaptureState(),e=this.appState.drawFramebufferBinding,s=this.gl.checkFramebufferStatus(e);return this.restoreState(t),s}bindForDraw(){let t=this.appState.drawFramebufferBinding,e=this.appState.framebuffers;return e[t]!==this&&(this.gl.bindFramebuffer(t,this.framebuffer),e[t]=this),this}bindForRead(){let t=this.appState.readFramebufferBinding,e=this.appState.framebuffers;return e[t]!==this&&(this.gl.bindFramebuffer(t,this.framebuffer),e[t]=this),this}bindAndCaptureState(){let t=this.appState.drawFramebufferBinding,e=this.appState.framebuffers[t];return e!==this&&this.gl.bindFramebuffer(t,this.framebuffer),e}restoreState(t){if(t!==this){let e=this.appState.drawFramebufferBinding;this.gl.bindFramebuffer(e,t?t.framebuffer:null)}return this}get colorTextures(){return console.error("Framebuffer.colorTextures is deprecated and will be removed. Please use Framebuffer.colorAttachments."),this.colorAttachments}get depthTexture(){return console.error("Framebuffer.depthTexture is deprecated and will be removed. Please use Framebuffer.depthAttachment."),this.depthAttachment}}class N{constructor(t,e,s,i){this.gl=t,this.appState=e,this.shader=null,this.type=s,this.source=i.trim(),this.restore()}restore(){return this.shader=this.gl.createShader(this.type),this.gl.shaderSource(this.shader,this.source),this.gl.compileShader(this.shader),this}translatedSource(){return a.DEBUG_SHADERS?this.appState.extensions.debugShaders.getTranslatedShaderSource(this.shader):"(Unavailable)"}delete(){return this.shader&&(this.gl.deleteShader(this.shader),this.shader=null),this}checkCompilation(){if(!this.gl.getShaderParameter(this.shader,i.COMPILE_STATUS)){let t,e;for(console.error(this.gl.getShaderInfoLog(this.shader)),e=this.source.split("\n"),t=0;t<e.length;++t)console.error(`${t+1}: ${e[t]}`)}return this}}const u={};u[i.BOOL]="uniform1i",u[i.INT]="uniform1i",u[i.SAMPLER_2D]="uniform1i",u[i.INT_SAMPLER_2D]="uniform1i",u[i.UNSIGNED_INT_SAMPLER_2D]="uniform1i",u[i.SAMPLER_2D_SHADOW]="uniform1i",u[i.SAMPLER_2D_ARRAY]="uniform1i",u[i.INT_SAMPLER_2D_ARRAY]="uniform1i",u[i.UNSIGNED_INT_SAMPLER_2D_ARRAY]="uniform1i",u[i.SAMPLER_2D_ARRAY_SHADOW]="uniform1i",u[i.SAMPLER_CUBE]="uniform1i",u[i.INT_SAMPLER_CUBE]="uniform1i",u[i.UNSIGNED_INT_SAMPLER_CUBE]="uniform1i",u[i.SAMPLER_CUBE_SHADOW]="uniform1i",u[i.SAMPLER_3D]="uniform1i",u[i.INT_SAMPLER_3D]="uniform1i",u[i.UNSIGNED_INT_SAMPLER_3D]="uniform1i",u[i.UNSIGNED_INT]="uniform1ui",u[i.FLOAT]="uniform1f",u[i.FLOAT_VEC2]="uniform2f",u[i.FLOAT_VEC3]="uniform3f",u[i.FLOAT_VEC4]="uniform4f",u[i.INT_VEC2]="uniform2i",u[i.INT_VEC3]="uniform3i",u[i.INT_VEC4]="uniform4i",u[i.UNSIGNED_INT_VEC2]="uniform2ui",u[i.UNSIGNED_INT_VEC3]="uniform3ui",u[i.UNSIGNED_INT_VEC4]="uniform4ui",u[i.BOOL_VEC2]="uniform2i",u[i.BOOL_VEC3]="uniform3i",u[i.BOOL_VEC4]="uniform4i",u[i.FLOAT_MAT2]="uniformMatrix2fv",u[i.FLOAT_MAT3]="uniformMatrix3fv",u[i.FLOAT_MAT4]="uniformMatrix4fv",u[i.FLOAT_MAT2x3]="uniformMatrix2x3fv",u[i.FLOAT_MAT2x4]="uniformMatrix2x4fv",u[i.FLOAT_MAT3x2]="uniformMatrix3x2fv",u[i.FLOAT_MAT3x4]="uniformMatrix3x4fv",u[i.FLOAT_MAT4x2]="uniformMatrix4x2fv",u[i.FLOAT_MAT4x3]="uniformMatrix4x3fv";const I={};I[i.BOOL]=1,I[i.INT]=1,I[i.SAMPLER_2D]=1,I[i.INT_SAMPLER_2D]=1,I[i.UNSIGNED_INT_SAMPLER_2D]=1,I[i.SAMPLER_2D_SHADOW]=1,I[i.SAMPLER_2D_ARRAY]=1,I[i.INT_SAMPLER_2D_ARRAY]=1,I[i.UNSIGNED_INT_SAMPLER_2D_ARRAY]=1,I[i.SAMPLER_2D_ARRAY_SHADOW]=1,I[i.SAMPLER_CUBE]=1,I[i.INT_SAMPLER_CUBE]=1,I[i.UNSIGNED_INT_SAMPLER_CUBE]=1,I[i.SAMPLER_CUBE_SHADOW]=1,I[i.SAMPLER_3D]=1,I[i.INT_SAMPLER_3D]=1,I[i.UNSIGNED_INT_SAMPLER_3D]=1,I[i.UNSIGNED_INT]=1,I[i.FLOAT]=1,I[i.FLOAT_VEC2]=2,I[i.FLOAT_VEC3]=3,I[i.FLOAT_VEC4]=4,I[i.INT_VEC2]=2,I[i.INT_VEC3]=3,I[i.INT_VEC4]=4,I[i.UNSIGNED_INT_VEC2]=2,I[i.UNSIGNED_INT_VEC3]=3,I[i.UNSIGNED_INT_VEC4]=4,I[i.BOOL_VEC2]=2,I[i.BOOL_VEC3]=3,I[i.BOOL_VEC4]=4,I[i.FLOAT_MAT2]=4,I[i.FLOAT_MAT3]=9,I[i.FLOAT_MAT4]=16,I[i.FLOAT_MAT2x3]=6,I[i.FLOAT_MAT2x4]=8,I[i.FLOAT_MAT3x2]=6,I[i.FLOAT_MAT3x4]=12,I[i.FLOAT_MAT4x2]=8,I[i.FLOAT_MAT4x3]=12;const c={};c[i.INT]=Int32Array,c[i.SAMPLER_2D]=Int32Array,c[i.INT_SAMPLER_2D]=Int32Array,c[i.UNSIGNED_INT_SAMPLER_2D]=Int32Array,c[i.SAMPLER_2D_SHADOW]=Int32Array,c[i.SAMPLER_2D_ARRAY]=Int32Array,c[i.INT_SAMPLER_2D_ARRAY]=Int32Array,c[i.UNSIGNED_INT_SAMPLER_2D_ARRAY]=Int32Array,c[i.SAMPLER_2D_ARRAY_SHADOW]=Int32Array,c[i.SAMPLER_CUBE]=Int32Array,c[i.INT_SAMPLER_CUBE]=Int32Array,c[i.UNSIGNED_INT_SAMPLER_CUBE]=Int32Array,c[i.SAMPLER_CUBE_SHADOW]=Int32Array,c[i.SAMPLER_3D]=Int32Array,c[i.INT_SAMPLER_3D]=Int32Array,c[i.UNSIGNED_INT_SAMPLER_3D]=Int32Array,c[i.UNSIGNED_INT]=Uint32Array,c[i.FLOAT]=Float32Array,c[i.FLOAT_VEC2]=Float32Array,c[i.FLOAT_VEC3]=Float32Array,c[i.FLOAT_VEC4]=Float32Array,c[i.INT_VEC2]=Int32Array,c[i.INT_VEC3]=Int32Array,c[i.INT_VEC4]=Int32Array,c[i.UNSIGNED_INT_VEC2]=Uint32Array,c[i.UNSIGNED_INT_VEC3]=Uint32Array,c[i.UNSIGNED_INT_VEC4]=Uint32Array;class B{constructor(t,e,s){this.gl=t,this.handle=e,this.glFuncName=u[s],this.cache=s!==i.BOOL&&0}set(t){this.cache!==t&&(this.gl[this.glFuncName](this.handle,t),this.cache=t)}}class m{constructor(t,e,s,i){this.gl=t,this.handle=e,this.glFuncName=u[s]+"v",this.count=i,this.cache=new c[s](I[s]*i)}set(t){for(let e=0,s=t.length;e<s;++e)if(this.cache[e]!==t[e])return this.gl[this.glFuncName](this.handle,t),void this.cache.set(t)}}class M{constructor(t,e,s,i){this.gl=t,this.handle=e,this.glFuncName=u[s]+"v",this.count=i,this.cache=new Array(I[s]*i).fill(!1)}set(t){for(let e=0,s=t.length;e<s;++e)if(this.cache[e]!==t[e]){this.gl[this.glFuncName](this.handle,t);for(let i=e;i<s;i++)this.cache[i]=t[i];return}}}class C{constructor(t,e,s,i){this.gl=t,this.handle=e,this.glFuncName=u[s],this.count=i,this.cache=new Float32Array(I[s]*i)}set(t){for(let e=0,s=t.length;e<s;++e)if(this.cache[e]!==t[e])return this.gl[this.glFuncName](this.handle,!1,t),void this.cache.set(t)}}class O{constructor(t,e,s,r,E,_,a){this.gl=t,this.appState=e,this.program=null,this.transformFeedbackVaryings=E||null,this.transformFeedbackMode=a||i.SEPARATE_ATTRIBS,this.attributeLocations=_||null,this.uniforms={},this.uniformBlocks={},this.uniformBlockCount=0,this.samplers={},this.samplerCount=0,this.vertexSource=null,this.vertexShader=null,this.fragmentSource=null,this.fragmentShader=null,this.linked=!1,"string"==typeof s?this.vertexSource=s:this.vertexShader=s,"string"==typeof r?this.fragmentSource=r:this.fragmentShader=r,this.initialize()}restore(){return this.initialize(),this.link(),this.checkLinkage(),this}translatedVertexSource(){if(this.vertexShader)return this.vertexShader.translatedSource();{let t=new N(this.gl,this.appState,i.VERTEX_SHADER,this.vertexSource),e=t.translatedSource();return t.delete(),e}}translatedFragmentSource(){if(this.fragmentShader)return this.fragmentShader.translatedSource();{let t=new N(this.gl,this.appState,i.FRAGMENT_SHADER,this.fragmentSource),e=t.translatedSource();return t.delete(),e}}delete(){return this.program&&(this.gl.deleteProgram(this.program),this.program=null,this.appState.program===this&&(this.gl.useProgram(null),this.appState.program=null)),this}initialize(){return this.appState.program===this&&(this.gl.useProgram(null),this.appState.program=null),this.linked=!1,this.uniformBlockCount=0,this.samplerCount=0,this.vertexSource&&(this.vertexShader=new N(this.gl,this.appState,i.VERTEX_SHADER,this.vertexSource)),this.fragmentSource&&(this.fragmentShader=new N(this.gl,this.appState,i.FRAGMENT_SHADER,this.fragmentSource)),this.program=this.gl.createProgram(),this}link(){if(this.gl.attachShader(this.program,this.vertexShader.shader),this.gl.attachShader(this.program,this.fragmentShader.shader),this.transformFeedbackVaryings&&this.gl.transformFeedbackVaryings(this.program,this.transformFeedbackVaryings,this.transformFeedbackMode),this.attributeLocations)for(let t in this.attributeLocations)this.gl.bindAttribLocation(this.program,this.attributeLocations[t],t);return this.gl.linkProgram(this.program),this}checkCompletion(){return!a.PARALLEL_SHADER_COMPILE||this.gl.getProgramParameter(this.program,i.COMPLETION_STATUS_KHR)}checkLinkage(){return this.linked||(this.gl.getProgramParameter(this.program,i.LINK_STATUS)?(this.linked=!0,this.initVariables()):(console.error(this.gl.getProgramInfoLog(this.program)),this.vertexShader.checkCompilation(),this.fragmentShader.checkCompilation()),this.vertexSource&&(this.vertexShader.delete(),this.vertexShader=null),this.fragmentSource&&(this.fragmentShader.delete(),this.fragmentShader=null)),this}initVariables(){this.bind();let t,e=this.gl.getProgramParameter(this.program,i.ACTIVE_UNIFORMS);for(let s=0;s<e;++s){let e=this.gl.getActiveUniform(this.program,s),r=this.gl.getUniformLocation(this.program,e.name),E=null,_=e.type,a=e.size;switch(_){case i.SAMPLER_2D:case i.INT_SAMPLER_2D:case i.UNSIGNED_INT_SAMPLER_2D:case i.SAMPLER_2D_SHADOW:case i.SAMPLER_2D_ARRAY:case i.INT_SAMPLER_2D_ARRAY:case i.UNSIGNED_INT_SAMPLER_2D_ARRAY:case i.SAMPLER_2D_ARRAY_SHADOW:case i.SAMPLER_CUBE:case i.INT_SAMPLER_CUBE:case i.UNSIGNED_INT_SAMPLER_CUBE:case i.SAMPLER_CUBE_SHADOW:case i.SAMPLER_3D:case i.INT_SAMPLER_3D:case i.UNSIGNED_INT_SAMPLER_3D:t=this.samplerCount++,this.samplers[e.name]=t,this.gl.uniform1i(r,t);break;case i.INT:case i.UNSIGNED_INT:case i.FLOAT:E=a>1?m:B;break;case i.BOOL:E=a>1?M:B;break;case i.FLOAT_VEC2:case i.INT_VEC2:case i.UNSIGNED_INT_VEC2:case i.FLOAT_VEC3:case i.INT_VEC3:case i.UNSIGNED_INT_VEC3:case i.FLOAT_VEC4:case i.INT_VEC4:case i.UNSIGNED_INT_VEC4:E=m;break;case i.BOOL_VEC2:case i.BOOL_VEC3:case i.BOOL_VEC4:E=M;break;case i.FLOAT_MAT2:case i.FLOAT_MAT3:case i.FLOAT_MAT4:case i.FLOAT_MAT2x3:case i.FLOAT_MAT2x4:case i.FLOAT_MAT3x2:case i.FLOAT_MAT3x4:case i.FLOAT_MAT4x2:case i.FLOAT_MAT4x3:E=C;break;default:console.error("Unrecognized type for uniform ",e.name)}E&&(this.uniforms[e.name]=new E(this.gl,r,_,a))}let s=this.gl.getProgramParameter(this.program,i.ACTIVE_UNIFORM_BLOCKS);for(let t=0;t<s;++t){let e=this.gl.getActiveUniformBlockName(this.program,t),s=this.gl.getUniformBlockIndex(this.program,e),i=this.uniformBlockCount++;this.gl.uniformBlockBinding(this.program,s,i),this.uniformBlocks[e]=i}}uniform(t,e){return this.uniforms[t]&&this.uniforms[t].set(e),this}bind(){return this.appState.program!==this&&(this.gl.useProgram(this.program),this.appState.program=this),this}}class F{constructor(t,e){this.gl=t,this.query=null,this.target=e,this.active=!1,this.result=null,this.restore()}restore(){return this.query=this.gl.createQuery(),this.active=!1,this.result=null,this}begin(){return this.active||(this.gl.beginQuery(this.target,this.query),this.result=null),this}end(){return this.active||(this.gl.endQuery(this.target),this.active=!0),this}ready(){return!(!this.active||!this.gl.getQueryParameter(this.query,i.QUERY_RESULT_AVAILABLE))&&(this.active=!1,this.result=Number(this.gl.getQueryParameter(this.query,i.QUERY_RESULT)),!0)}delete(){return this.query&&(this.gl.deleteQuery(this.query),this.query=null),this}}class D{constructor(t){this.gl=t,this.cpuTimer=window.performance||window.Date,this.gpuTimerQuery=null,this.cpuStartTime=0,this.cpuTime=0,this.gpuTime=0,this.restore()}restore(){return a.GPU_TIMER&&(this.gpuTimerQuery?this.gpuTimerQuery.restore():this.gpuTimerQuery=new F(this.gl,i.TIME_ELAPSED_EXT)),this.cpuStartTime=0,this.cpuTime=0,this.gpuTime=0,this}start(){return a.GPU_TIMER?this.gpuTimerQuery.active||(this.gpuTimerQuery.begin(),this.cpuStartTime=this.cpuTimer.now()):this.cpuStartTime=this.cpuTimer.now(),this}end(){return a.GPU_TIMER?this.gpuTimerQuery.active||(this.gpuTimerQuery.end(),this.cpuTime=this.cpuTimer.now()-this.cpuStartTime):this.cpuTime=this.cpuTimer.now()-this.cpuStartTime,this}ready(){if(a.GPU_TIMER){if(!this.gpuTimerQuery.active)return!1;var t=this.gpuTimerQuery.ready(),e=this.gl.getParameter(i.GPU_DISJOINT_EXT);return!(!t||e)&&(this.gpuTime=this.gpuTimerQuery.result/1e6,!0)}return Boolean(this.cpuStartTime)}delete(){return this.gpuTimerQuery&&(this.gpuTimerQuery.delete(),this.gpuTimerQuery=null),this}}class f{constructor(t,e){this.gl=t,this.appState=e,this.transformFeedback=null,this.restore()}restore(){return this.appState.transformFeedback===this&&(this.appState.transformFeedback=null),this.transformFeedback=this.gl.createTransformFeedback(),this}feedbackBuffer(t,e){return this.gl.bindTransformFeedback(i.TRANSFORM_FEEDBACK,this.transformFeedback),this.gl.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,t,e.buffer),this.gl.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.gl.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,t,null),this}delete(){return this.transformFeedback&&(this.gl.deleteTransformFeedback(this.transformFeedback),this.transformFeedback=null,this.appState.transformFeedback===this&&(this.gl.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.appState.transformFeedback=null)),this}bind(){return this.appState.transformFeedback!==this&&(this.gl.bindTransformFeedback(i.TRANSFORM_FEEDBACK,this.transformFeedback),this.appState.transformFeedback=this),this}}class L{constructor(t,e,s,r=t.DYNAMIC_DRAW){this.gl=t,this.buffer=null,this.dataViews={},this.offsets=new Array(s.length),this.sizes=new Array(s.length),this.types=new Array(s.length),this.size=0,this.usage=r,this.appState=e,this.currentBase=-1;for(let t=0,e=s.length;t<e;++t){let e=s[t];switch(e){case i.FLOAT:case i.INT:case i.UNSIGNED_INT:case i.BOOL:this.offsets[t]=this.size,this.sizes[t]=1,e===i.INT?this.types[t]=i.INT:e===i.UNSIGNED_INT?this.types[t]=i.UNSIGNED_INT:this.types[t]=i.FLOAT,this.size++;break;case i.FLOAT_VEC2:case i.INT_VEC2:case i.UNSIGNED_INT_VEC2:case i.BOOL_VEC2:this.size+=this.size%2,this.offsets[t]=this.size,this.sizes[t]=2,e===i.INT_VEC2?this.types[t]=i.INT:e===i.UNSIGNED_INT_VEC2?this.types[t]=i.UNSIGNED_INT:this.types[t]=i.FLOAT,this.size+=2;break;case i.FLOAT_VEC3:case i.INT_VEC3:case i.UNSIGNED_INT_VEC3:case i.BOOL_VEC3:case i.FLOAT_VEC4:case i.INT_VEC4:case i.UNSIGNED_INT_VEC4:case i.BOOL_VEC4:this.size+=(4-this.size%4)%4,this.offsets[t]=this.size,this.sizes[t]=4,e===i.INT_VEC4||e===i.INT_VEC3?this.types[t]=i.INT:e===i.UNSIGNED_INT_VEC4||e===i.UNSIGNED_INT_VEC3?this.types[t]=i.UNSIGNED_INT:this.types[t]=i.FLOAT,this.size+=4;break;case i.FLOAT_MAT2:case i.FLOAT_MAT2x3:case i.FLOAT_MAT2x4:this.size+=(4-this.size%4)%4,this.offsets[t]=this.size,this.sizes[t]=8,this.types[t]=i.FLOAT,this.size+=8;break;case i.FLOAT_MAT3:case i.FLOAT_MAT3x2:case i.FLOAT_MAT3x4:this.size+=(4-this.size%4)%4,this.offsets[t]=this.size,this.sizes[t]=12,this.types[t]=i.FLOAT,this.size+=12;break;case i.FLOAT_MAT4:case i.FLOAT_MAT4x2:case i.FLOAT_MAT4x3:this.size+=(4-this.size%4)%4,this.offsets[t]=this.size,this.sizes[t]=16,this.types[t]=i.FLOAT,this.size+=16;break;default:console.error("Unsupported type for uniform buffer.")}}this.size+=(4-this.size%4)%4,this.data=new Float32Array(this.size),this.dataViews[i.FLOAT]=this.data,this.dataViews[i.INT]=new Int32Array(this.data.buffer),this.dataViews[i.UNSIGNED_INT]=new Uint32Array(this.data.buffer),this.dirtyStart=this.size,this.dirtyEnd=0,this.restore()}restore(){return-1!==this.currentBase&&this.appState.uniformBuffers[this.currentBase]===this&&(this.appState.uniformBuffers[this.currentBase]=null),this.buffer=this.gl.createBuffer(),this.gl.bindBuffer(i.UNIFORM_BUFFER,this.buffer),this.gl.bufferData(i.UNIFORM_BUFFER,4*this.size,this.usage),this.gl.bindBuffer(i.UNIFORM_BUFFER,null),this}set(t,e){let s=this.dataViews[this.types[t]],i=this.offsets[t],r=this.sizes[t];return 1===this.sizes[t]?s[i]=e:s.set(e,i),i<this.dirtyStart&&(this.dirtyStart=i),this.dirtyEnd<i+r&&(this.dirtyEnd=i+r),this}update(){if(this.dirtyStart>=this.dirtyEnd)return this;let t=this.data.subarray(this.dirtyStart,this.dirtyEnd),e=4*this.dirtyStart;return this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,this.buffer),this.gl.bufferSubData(this.gl.UNIFORM_BUFFER,e,t),this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,null),this.dirtyStart=this.size,this.dirtyEnd=0,this}delete(){return this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null,-1!==this.currentBase&&this.appState.uniformBuffers[this.currentBase]===this&&(this.appState.uniformBuffers[this.currentBase]=null),this.currentBase=-1),this}bind(t){let e=this.appState.uniformBuffers[t];return e!==this&&(e&&(e.currentBase=-1),-1!==this.currentBase&&(this.appState.uniformBuffers[this.currentBase]=null),this.gl.bindBufferBase(this.gl.UNIFORM_BUFFER,t,this.buffer),this.appState.uniformBuffers[t]=this,this.currentBase=t),this}}class U{constructor(t,e){this.gl=t,this.appState=e,this.vertexArray=null,this.indexType=null,this.indexed=!1,this.numElements=0,this.numInstances=1,this.offsets=0,this.numDraws=1,this.instanceAttributeBuffers={}}restore(){return this.appState.vertexArray===this&&(this.appState.vertexArray=null),null!==this.vertexArray&&(this.vertexArray=this.gl.createVertexArray()),this}vertexAttributeBuffer(t,e,s=n){return this.attributeBuffer(t,e,s,!1),this}instanceAttributeBuffer(t,e,s=n){return this.attributeBuffer(t,e,s,!0),this.instanceAttributeBuffers[t]={vertexBuffer:e,options:s},this}baseOffsetInstanceAttributeBuffers(t=0){Object.entries(this.instanceAttributeBuffers).forEach((([e,{vertexBuffer:s,options:i}])=>{this.attributeBuffer(Number(e),s,i,!0,t)}))}indexBuffer(t){return null===this.vertexArray&&(this.vertexArray=this.gl.createVertexArray()),this.bind(),this.gl.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.buffer),this.numElements=3*t.numItems,this.indexType=t.type,this.indexed=!0,this}delete(){return this.vertexArray&&(this.gl.deleteVertexArray(this.vertexArray),this.vertexArray=null,this.appState.vertexArray===this&&(this.gl.bindVertexArray(null),this.appState.vertexArray=null)),this}bind(){return this.appState.vertexArray!==this&&(this.gl.bindVertexArray(this.vertexArray),this.appState.vertexArray=this),this}attributeBuffer(t,e,s={},E,_=0){null===this.vertexArray&&(this.vertexArray=this.gl.createVertexArray()),this.bind(),this.gl.bindBuffer(i.ARRAY_BUFFER,e.buffer);let{type:a=e.type,size:h=e.itemSize,stride:n=0,offset:T=0,normalized:A=!1,integer:R=Boolean(e.integer&&!A)}=s,S=e.numColumns;0===n&&(n=S*h*r[a]);let l=Math.ceil((e.byteLength-T)/n);for(let e=0;e<S;++e)R?this.gl.vertexAttribIPointer(t+e,h,a,n,T+e*h*r[a]+_*n):this.gl.vertexAttribPointer(t+e,h,a,A,n,T+e*h*r[a]+_*n),E&&this.gl.vertexAttribDivisor(t+e,1),this.gl.enableVertexAttribArray(t+e);return 1===this.numDraws&&(E?this.numInstances=l:this.indexed||(this.numElements=l)),this.gl.bindBuffer(i.ARRAY_BUFFER,null),this}}const d={[i.BYTE]:!0,[i.UNSIGNED_BYTE]:!0,[i.SHORT]:!0,[i.UNSIGNED_SHORT]:!0,[i.INT]:!0,[i.UNSIGNED_INT]:!0};class P{constructor(t,e,s,E,_,a=t.STATIC_DRAW,h){let n,T,A;switch(s){case i.FLOAT_MAT4:case i.FLOAT_MAT4x2:case i.FLOAT_MAT4x3:n=4;break;case i.FLOAT_MAT3:case i.FLOAT_MAT3x2:case i.FLOAT_MAT3x4:n=3;break;case i.FLOAT_MAT2:case i.FLOAT_MAT2x3:case i.FLOAT_MAT2x4:n=2;break;default:n=1}switch(s){case i.FLOAT_MAT4:case i.FLOAT_MAT3x4:case i.FLOAT_MAT2x4:E=4,s=i.FLOAT;break;case i.FLOAT_MAT3:case i.FLOAT_MAT4x3:case i.FLOAT_MAT2x3:E=3,s=i.FLOAT;break;case i.FLOAT_MAT2:case i.FLOAT_MAT3x2:case i.FLOAT_MAT4x2:E=2,s=i.FLOAT}"number"==typeof _?(T=_,s&&(_*=r[s]),A=_):(T=_.length,A=_.byteLength),this.gl=t,this.buffer=null,this.appState=e,this.type=s,this.itemSize=E,this.numItems=s?T/(E*n):A/E,this.numColumns=n,this.byteLength=A,this.usage=a,this.indexArray=Boolean(h),this.integer=Boolean(d[this.type]),this.binding=this.indexArray?i.ELEMENT_ARRAY_BUFFER:i.ARRAY_BUFFER,this.restore(_)}restore(t){return t||(t=this.byteLength),this.appState.vertexArray&&(this.gl.bindVertexArray(null),this.appState.vertexArray=null),this.buffer=this.gl.createBuffer(),this.gl.bindBuffer(this.binding,this.buffer),this.gl.bufferData(this.binding,t,this.usage),this.gl.bindBuffer(this.binding,null),this}data(t,e=0){return this.appState.vertexArray&&(this.gl.bindVertexArray(null),this.appState.vertexArray=null),this.gl.bindBuffer(this.binding,this.buffer),this.gl.bufferSubData(this.binding,e,t),this.gl.bindBuffer(this.binding,null),this}delete(){return this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null),this}}class g{constructor(t){this.gl=t,this.canvas=t.canvas,this.width=this.gl.drawingBufferWidth,this.height=this.gl.drawingBufferHeight,this.viewportX=0,this.viewportY=0,this.viewportWidth=0,this.viewportHeight=0,this.currentDrawCalls=null,this.emptyFragmentShader=null,this.state={program:null,vertexArray:null,transformFeedback:null,activeTexture:-1,textures:new Array(a.MAX_TEXTURE_UNITS),uniformBuffers:new Array(a.MAX_UNIFORM_BUFFERS),freeUniformBufferBases:[],framebuffers:{},drawFramebufferBinding:i.DRAW_FRAMEBUFFER,readFramebufferBinding:i.READ_FRAMEBUFFER,extensions:{}},this.clearBits=this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT|this.gl.STENCIL_BUFFER_BIT,this.cpuTime=0,this.gpuTime=0,this.viewport(0,0,this.width,this.height),this.contextLostExt=null,this.contextLostListener=null,this.contextRestoredListener=null,this.contextRestoredHandler=null,this.initExtensions()}loseContext(){return this.contextLostExt&&this.contextLostExt.loseContext(),this}restoreContext(){return this.contextLostExt&&this.contextLostExt.restoreContext(),this}onContextRestored(t){return this.contextRestoredHandler=t,this.initContextListeners(),this}enable(t){return this.gl.enable(t),this}disable(t){return this.gl.disable(t),this}colorMask(t,e,s,i){return this.gl.colorMask(t,e,s,i),this}clearColor(t,e,s,i){return this.gl.clearColor(t,e,s,i),this}clearMask(t){return this.clearBits=t,this}clear(){return this.gl.clear(this.clearBits),this}drawFramebuffer(t){return t.bindForDraw(),this}readFramebuffer(t){return t.bindForRead(),this}defaultDrawFramebuffer(){let t=this.state.drawFramebufferBinding;return null!==this.state.framebuffers[t]&&(this.gl.bindFramebuffer(t,null),this.state.framebuffers[t]=null),this}defaultReadFramebuffer(){let t=this.state.readFramebufferBinding;return null!==this.state.framebuffers[t]&&(this.gl.bindFramebuffer(t,null),this.state.framebuffers[t]=null),this}blitFramebuffer(t,e=n){let s=this.state.readFramebufferBinding,r=this.state.drawFramebufferBinding,E=this.state.framebuffers[s],_=this.state.framebuffers[r],a=E?E.width:this.width,h=E?E.height:this.height,T=_?_.width:this.width,A=_?_.height:this.height,{srcStartX:R=0,srcStartY:S=0,srcEndX:l=a,srcEndY:o=h,dstStartX:N=0,dstStartY:u=0,dstEndX:I=T,dstEndY:c=A,filter:B=i.NEAREST}=e;return this.gl.blitFramebuffer(R,S,l,o,N,u,I,c,t,B),this}depthRange(t,e){return this.gl.depthRange(t,e),this}depthMask(t){return this.gl.depthMask(t),this}depthFunc(t){return this.gl.depthFunc(t),this}blendFunc(t,e){return this.gl.blendFunc(t,e),this}blendFuncSeparate(t,e,s,i){return this.gl.blendFuncSeparate(t,e,s,i),this}blendEquation(t){return this.gl.blendEquation(t),this}stencilMask(t){return this.gl.stencilMask(t),this}stencilMaskSeparate(t,e){return this.gl.stencilMaskSeparate(t,e),this}stencilFunc(t,e,s){return this.gl.stencilFunc(t,e,s),this}stencilFuncSeparate(t,e,s,i){return this.gl.stencilFuncSeparate(t,e,s,i),this}stencilOp(t,e,s){return this.gl.stencilOp(t,e,s),this}stencilOpSeparate(t,e,s,i){return this.gl.stencilOpSeparate(t,e,s,i),this}scissor(t,e,s,i){return this.gl.scissor(t,e,s,i),this}polygonOffset(t,e){return this.gl.polygonOffset(t,e),this}readPixel(t,e,s,r=n){let{format:E=i.RGBA,type:_=i.UNSIGNED_BYTE}=r;return this.gl.readPixels(t,e,1,1,E,_,s),this}viewport(t,e,s,i){return this.viewportWidth===s&&this.viewportHeight===i&&this.viewportX===t&&this.viewportY===e||(this.viewportX=t,this.viewportY=e,this.viewportWidth=s,this.viewportHeight=i,this.gl.viewport(t,e,this.viewportWidth,this.viewportHeight)),this}defaultViewport(){return this.viewport(0,0,this.width,this.height),this}resize(t,e){return this.canvas.width=t,this.canvas.height=e,this.width=this.gl.drawingBufferWidth,this.height=this.gl.drawingBufferHeight,this.viewport(0,0,this.width,this.height),this}createProgram(t,e,s={}){let{transformFeedbackVaryings:i,attributeLocations:r,transformFeedbackMode:E}=s;return new O(this.gl,this.state,t,e,i,r,E).link().checkLinkage()}createPrograms(...t){return new Promise(((e,s)=>{let i=t.length,r=new Array(i),E=new Array(i),_=i;for(let e=0;e<i;++e){let s=t[e],i=s[0],_=s[1],a=s[2]||{},{transformFeedbackVaryings:h,attributeLocations:n,transformFeedbackMode:T}=a;r[e]=new O(this.gl,this.state,i,_,h,n,T),E[e]=r[e]}for(let t=0;t<i;++t)r[t].link();let a=()=>{let t=0;for(let e=0;e<_;++e)if(E[e].checkCompletion()){if(E[e].checkLinkage(),!E[e].linked)return void s(new Error("Program linkage failed"));++t}else E[e-t]=E[e];_-=t,0===_?e(r):requestAnimationFrame(a)};a()}))}restorePrograms(...t){return new Promise(((e,s)=>{let i=t.length,r=t.slice(),E=i;for(let e=0;e<i;++e)t[e].initialize();for(let e=0;e<i;++e)t[e].link();for(let e=0;e<i;++e)t[e].checkCompletion();let _=()=>{let t=0;for(let e=0;e<E;++e)if(r[e].checkCompletion()){if(r[e].checkLinkage(),!r[e].linked)return void s(new Error("Program linkage failed"));++t}else r[e-t]=r[e];E-=t,0===E?e():requestAnimationFrame(_)};_()}))}createShader(t,e){return new N(this.gl,this.state,t,e)}createVertexArray(){return new U(this.gl,this.state)}createTransformFeedback(){return new f(this.gl,this.state)}createVertexBuffer(t,e,s,i){return new P(this.gl,this.state,t,e,s,i)}createMatrixBuffer(t,e,s){return new P(this.gl,this.state,t,0,e,s)}createInterleavedBuffer(t,e,s){return new P(this.gl,this.state,null,t,e,s)}createIndexBuffer(t,e,s,i){return ArrayBuffer.isView(e)&&(i=s,s=e,e=3),new P(this.gl,this.state,t,e,s,i,!0)}createUniformBuffer(t,e){return new L(this.gl,this.state,t,e)}createTexture2D(t,e,s,i){return"number"==typeof t?(i=s,s=e,e=t,t=null):void 0===s&&(i=e,e=t.width,s=t.height),new S(this.gl,this.state,this.gl.TEXTURE_2D,t,e,s,void 0,!1,i)}createTextureArray(t,e,s,i,r){return"number"==typeof t&&(r=i,i=s,s=e,e=t,t=null),new S(this.gl,this.state,this.gl.TEXTURE_2D_ARRAY,t,e,s,i,!0,r)}createTexture3D(t,e,s,i,r){return"number"==typeof t&&(r=i,i=s,s=e,e=t,t=null),new S(this.gl,this.state,this.gl.TEXTURE_3D,t,e,s,i,!0,r)}createCubemap(t){return new A(this.gl,this.state,t)}createRenderbuffer(t,e,s,i=0){return new l(this.gl,t,e,s,i)}createFramebuffer(){return new o(this.gl,this.state)}createQuery(t){return new F(this.gl,t)}createTimer(){return new D(this.gl)}createDrawCall(t,e,s){return new R(this.gl,this.state,t,e,s)}initExtensions(){this.gl.getExtension("EXT_color_buffer_float"),this.gl.getExtension("OES_texture_float_linear"),this.gl.getExtension("WEBGL_compressed_texture_s3tc"),this.gl.getExtension("WEBGL_compressed_texture_s3tc_srgb"),this.gl.getExtension("WEBGL_compressed_texture_etc"),this.gl.getExtension("WEBGL_compressed_texture_astc"),this.gl.getExtension("WEBGL_compressed_texture_pvrtc"),this.gl.getExtension("EXT_disjoint_timer_query_webgl2"),this.gl.getExtension("EXT_disjoint_timer_query"),this.gl.getExtension("EXT_texture_filter_anisotropic"),this.state.extensions.debugShaders=this.gl.getExtension("WEBGL_debug_shaders"),this.contextLostExt=this.gl.getExtension("WEBGL_lose_context"),this.gl.getExtension("KHR_parallel_shader_compile"),this.state.extensions.multiDrawInstanced=this.gl.getExtension("WEBGL_multi_draw_instanced"),this.state.extensions.drawInstancedBaseVertexBaseInstance=this.gl.getExtension("WEBGL_draw_instanced_base_vertex_base_instance"),this.state.extensions.multiDrawInstancedBaseVertexBaseInstance=this.gl.getExtension("WEBGL_multi_draw_instanced_base_vertex_base_instance")}initContextListeners(){this.contextRestoredHandler?(this.contextLostListener=t=>{t.preventDefault()},this.contextRestoredListener=()=>{this.initExtensions(),this.contextRestoredHandler()},this.canvas.addEventListener("webglcontextlost",this.contextLostListener),this.canvas.addEventListener("webglcontextrestored",this.contextRestoredListener)):(this.canvas.removeEventListener("webglcontextlost",this.contextLostListener),this.canvas.removeEventListener("webglcontextrestored",this.contextRestoredListener),this.contextLostListener=null,this.contextRestoredListener=null)}depthTest(){return console.warn("App.depthTest is deprecated. Use App.enable(PicoGL.DEPTH_TEST) instead."),this.enable(i.DEPTH_TEST),this}noDepthTest(){return console.warn("App.noDepthTest is deprecated. Use App.disable(PicoGL.DEPTH_TEST) instead."),this.disable(i.DEPTH_TEST),this}blend(){return console.warn("App.blend is deprecated. Use App.enable(PicoGL.BLEND) instead."),this.enable(i.BLEND),this}noBlend(){return console.warn("App.noBlend is deprecated. Use App.disable(PicoGL.BLEND) instead."),this.disable(i.BLEND),this}stencilTest(){return console.warn("App.stencilTest is deprecated. Use App.enable(PicoGL.STENCIL_TEST) instead."),this.enable(i.STENCIL_TEST),this}noStencilTest(){return console.warn("App.noStencilTest is deprecated. Use App.disable(PicoGL.STENCIL_TEST) instead."),this.disable(i.STENCIL_TEST),this}scissorTest(){return console.warn("App.scissorTest is deprecated. Use App.enable(PicoGL.SCISSOR_TEST) instead."),this.enable(i.SCISSOR_TEST),this}noScissorTest(){return console.warn("App.noScissorTest is deprecated. Use App.disable(PicoGL.SCISSOR_TEST) instead."),this.disable(i.SCISSOR_TEST),this}rasterize(){return console.warn("App.noRasterize is deprecated. Use App.disable(PicoGL.RASTERIZER_DISCARD) instead."),this.disable(i.RASTERIZER_DISCARD),this}noRasterize(){return console.warn("App.rasterize is deprecated. Use App.enable(PicoGL.RASTERIZER_DISCARD) instead."),this.enable(i.RASTERIZER_DISCARD),this}cullBackfaces(){return console.warn("App.cullBackfaces is deprecated. Use App.enable(PicoGL.CULL_FACE) instead."),this.enable(i.CULL_FACE),this}drawBackfaces(){return console.warn("App.drawBackfaces is deprecated. Use App.disable(PicoGL.CULL_FACE) instead."),this.disable(i.CULL_FACE),this}}let p=!1;const G=Object.assign({version:"0.17.9",WEBGL_INFO:a,createApp:(t,e)=>("CANVAS"===t.tagName&&(t=t.getContext("webgl2",e)),p||(a.MAX_TEXTURE_UNITS=t.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS),a.MAX_UNIFORM_BUFFERS=t.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS),a.MAX_UNIFORMS=Math.min(t.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),t.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS)),a.SAMPLES=t.getParameter(i.SAMPLES),a.VENDOR="(Unknown)",a.RENDERER="(Unknown)",a.FLOAT_RENDER_TARGETS=Boolean(t.getExtension("EXT_color_buffer_float")),a.LINEAR_FLOAT_TEXTURES=Boolean(t.getExtension("OES_texture_float_linear")),a.S3TC_TEXTURES=Boolean(t.getExtension("WEBGL_compressed_texture_s3tc")),a.S3TC_SRGB_TEXTURES=Boolean(t.getExtension("WEBGL_compressed_texture_s3tc_srgb")),a.ETC_TEXTURES=Boolean(t.getExtension("WEBGL_compressed_texture_etc")),a.ASTC_TEXTURES=Boolean(t.getExtension("WEBGL_compressed_texture_astc")),a.PVRTC_TEXTURES=Boolean(t.getExtension("WEBGL_compressed_texture_pvrtc")),a.LOSE_CONTEXT=Boolean(t.getExtension("WEBGL_lose_context")),a.DEBUG_SHADERS=Boolean(t.getExtension("WEBGL_debug_shaders")),a.GPU_TIMER=Boolean(t.getExtension("EXT_disjoint_timer_query_webgl2")||t.getExtension("EXT_disjoint_timer_query")),a.TEXTURE_ANISOTROPY=Boolean(t.getExtension("EXT_texture_filter_anisotropic")),a.MAX_TEXTURE_ANISOTROPY=a.TEXTURE_ANISOTROPY?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,a.DEBUG_RENDERER_INFO=Boolean(t.getExtension("WEBGL_debug_renderer_info")),a.DEBUG_RENDERER_INFO&&(a.VENDOR=t.getParameter(i.UNMASKED_VENDOR_WEBGL),a.RENDERER=t.getParameter(i.UNMASKED_RENDERER_WEBGL)),a.PARALLEL_SHADER_COMPILE=Boolean(t.getExtension("KHR_parallel_shader_compile")),a.MULTI_DRAW_INSTANCED=Boolean(t.getExtension("WEBGL_multi_draw_instanced")),a.DRAW_INSTANCED_BASE_VERTEX_BASE_INSTANCE=Boolean(t.getExtension("WEBGL_draw_instanced_base_vertex_base_instance")),a.MULTI_DRAW_INSTANCED_BASE_VERTEX_BASE_INSTANCE=Boolean(t.getExtension("WEBGL_multi_draw_instanced_base_vertex_base_instance")),p=!0),new g(t))},i)}},e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}return s.d=(t,e)=>{for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s(825)})().PicoGL}));
//# sourceMappingURL=picogl.min.js.map